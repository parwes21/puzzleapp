{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","loading","setLoading","color","useEffect","setTimeout","text","setText","isFound","setFound","isNotFound","setNotFound","paragraphEl","useRef","className","size","type","placeholder","onChange","e","target","value","paragraphText","current","textContent","includes","ref","highlight","style","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAAe,I,8BCkFAA,MA3Ef,WACE,MAA6BC,oBAAS,GAAtC,mBAAMC,EAAN,KAAeC,EAAf,KACA,EAAwBF,mBAAS,UAAjC,mBAAKG,EAAL,UACAC,qBAAU,WACRF,GAAW,GACXG,YAAW,WACTH,GAAW,KACV,OACH,IAEF,MAAwBF,mBAAS,IAAjC,mBAAOM,EAAP,KAAaC,EAAb,KACA,EAA4BP,oBAAS,GAArC,mBAAOQ,EAAP,KAAgBC,EAAhB,KACA,EAAkCT,oBAAS,GAA3C,mBAAOU,EAAP,KAAmBC,EAAnB,KACMC,EAAcC,iBAAO,MA6B3B,OACA,mCACA,qBAAKC,UAAU,OAAf,SAEEb,EACA,qBAAKa,UAAU,gBAAf,SACA,cAAC,IAAD,CAAYX,MAAOA,EAAOW,UAAU,IAAIb,QAASA,EAASc,KAAM,QAGnE,sBAAKD,UAAU,YAAf,UACG,qBAAKA,UAAU,UAAf,SACE,uBAAOE,KAAK,OAAQC,YAAY,iBAAgBC,SAtChC,SAACC,GACnBZ,EAAQY,EAAEC,OAAOC,OACjB,IAAMC,EAAgBV,EAAYW,QAAQC,YACnB,KAAnBL,EAAEC,OAAOC,OAAgBC,EAAcG,SAASN,EAAEC,OAAOC,OAC3DZ,GAAS,GAETA,GAAS,GAEY,KAAnBU,EAAEC,OAAOC,OAAgBC,EAAcG,SAASN,EAAEC,OAAOC,OAC3DV,GAAY,GAEZA,GAAY,IA2B4DU,MAAOf,MAGjF,mBAAGoB,IAAKd,EAAce,UAAWrB,EAAjC,2cASCE,GAAW,oBAAGoB,MAAO,CAAEzB,MAAO,SAAnB,2BAA6CG,KACxDI,GAAc,oBAAGkB,MAAO,CAAEzB,MAAO,OAAnB,UAA6BG,EAA7B,iDC7DJuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.333aa0cd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport React, { useState, useRef, useEffect } from \"react\";\n// import Highlighter from \"react-highlight-words\";\nimport HashLoader from \"react-spinners/HashLoader\";\n\nimport './App.css';\n\nfunction App() {\n  const[loading, setLoading] = useState(false);\n  let [color, setColor] = useState(\"BD10E0\");\n  useEffect(()=>{\n    setLoading(true)\n    setTimeout(()=>{\n      setLoading(false)\n    }, 5000)\n  },[])\n\n  const [text, setText] = useState(\"\");\n  const [isFound, setFound] = useState(false);\n  const [isNotFound, setNotFound] = useState(false);\n  const paragraphEl = useRef(null);\n\n  const handleInput = (e) => {\n    setText(e.target.value);\n    const paragraphText = paragraphEl.current.textContent;\n    if (e.target.value !== \"\" && paragraphText.includes(e.target.value)) {\n      setFound(true);\n    } else {\n      setFound(false);\n    }\n    if (e.target.value !== \"\" && paragraphText.includes(e.target.value)) {\n      setNotFound(false);\n    } else {\n      setNotFound(true);\n    }\n   \n  \n    \n  }\n  \n  \n  // const search = ()=>{\n  //   let textToSearch =  document.getElementById(\"text_to_search\").value;\n  //   let paragraph =  document.getElementById(\"paragraph\");\n\n  //   textToSearch = textToSearch.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n  //   let pattern =new RegExp(`${textToSearch},\"gi\"`);\n  //   paragraph.innerHTML = paragraph.textContent.replace(pattern, match=>`<mark>${match}</mark>`)\n  // }\n  return (\n  <>\n  <div className='app '>\n  {\n    loading ?(\n    <div className=\"sweet-loading\"> \n    <HashLoader color={color} className=' ' loading={loading} size={350} />\n  </div>)\n    :\n(<div className=\"container\">\n    <div className=\"wrapper\">\n      <input type=\"text\"  placeholder='search keyword'onChange={handleInput}  value={text}/>\n    {/* <button  onClick={event=>{setSearchWord(event.target.value)}} >Search</button>  */}\n    </div>\n    <p ref={paragraphEl}  highlight={text}>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\n        tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim\n        veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea\n        commodo consequat. Duis aute irure dolor in reprehenderit in voluptate\n        velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint\n        occaecat cupidatat non proident, sunt in culpa qui officia deserunt\n        mollit anim id est laborum.\n      </p>\n    {isFound && <p style={{ color: \"green\" }}>We found it : {text}</p>}\n    {isNotFound && <p style={{ color: \"red\" }}>{text} : This Word Not found in Paragraph</p>}\n     \n      </div>)\n  }\n    </div>\n  </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}